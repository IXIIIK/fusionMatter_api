from fastapi import FastAPI, Request, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import JSONResponse
from fastapi.exceptions import RequestValidationError
from starlette.exceptions import HTTPException as StarletteHTTPException

from dotenv import load_dotenv
from pydantic import BaseModel
import re
import requests
import os

app = FastAPI()

# CORS, –µ—Å–ª–∏ frontend –Ω–∞ –¥—Ä—É–≥–æ–º –¥–æ–º–µ–Ω–µ
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # —É–∫–∞–∂–∏ –¥–æ–º–µ–Ω –≤–º–µ—Å—Ç–æ * –Ω–∞ –ø—Ä–æ–¥–µ
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

load_dotenv()

# –¢–µ–ª–µ–≥—Ä–∞–º —Ç–æ–∫–µ–Ω –∏ ID —á–∞—Ç–∞
TELEGRAM_TOKEN = os.getenv('BOT_TOKEN')
CHAT_ID = os.getenv('CHAT_ID')

class FormData(BaseModel):
    name: str
    email: str
    message: str


@app.exception_handler(StarletteHTTPException)
async def http_exception_handler(request, exc):
    return JSONResponse(status_code=exc.status_code, content={"error": exc.detail})

@app.exception_handler(RequestValidationError)
async def validation_exception_handler(request, exc):
    return JSONResponse(status_code=400, content={"error": "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö"})


@app.post("/submit")
async def submit_form(data: FormData, request: Request):
    name = data.name.strip()
    email = data.email.strip()
    message = data.message.strip()

    # –ü—Ä–æ—Å—Ç–æ–π –∞–Ω—Ç–∏-–∏–Ω–∂–µ–∫—Ç –∏ –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–∫—Ä–∏–ø—Ç–æ–≤
    dangerous_pattern = re.compile(r"[;\'\"--]|<script>|</script>", re.IGNORECASE)
    if any(dangerous_pattern.search(field) for field in [name, email, message]):
        raise HTTPException(status_code=400, detail="–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Ñ–æ—Ä–º–µ.")

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    msg = f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞:\n\nüë§ –ò–º—è: {name}\nüìß –ö–æ–Ω—Ç–∞–∫—Ç: {email}\nüìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}"

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    print("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤ Telegram:", msg)
    print("URL:", url)
    response = requests.post(url, data={
        "chat_id": CHAT_ID,
        "text": msg
    })

    if response.status_code != 200:
        print("Telegram error:", response.text)  # <‚Äî –≤–æ—Ç —ç—Ç–æ –ø–æ–∫–∞–∂–µ—Ç, —á—Ç–æ –Ω–µ —Ç–∞–∫
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram")

    return {"status": "ok", "message": "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"}
